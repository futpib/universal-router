{"version":3,"file":"universal-router-sync.min.js","sources":["src/sync.js"],"sourcesContent":["/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport UniversalRouter from './UniversalRouter'\n\nconst { matchRoute, isChildRoute } = UniversalRouter\n\nexport default class UniversalRouterSync extends UniversalRouter {\n  resolve(pathnameOrContext) {\n    const context = {\n      ...this.context,\n      ...(typeof pathnameOrContext === 'string'\n        ? { pathname: pathnameOrContext }\n        : pathnameOrContext),\n    }\n    const match = matchRoute(\n      this.root,\n      this.baseUrl,\n      context.pathname.substr(this.baseUrl.length),\n      [],\n      null,\n    )\n    const resolve = this.resolveRoute\n    let matches = null\n    let nextMatches = null\n    let currentContext = context\n\n    function next(resume, parent = matches.value.route, prevResult) {\n      const routeToSkip = prevResult === null && matches.value.route\n      matches = nextMatches || match.next(routeToSkip)\n      nextMatches = null\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches\n          return null\n        }\n      }\n\n      if (matches.done) {\n        const error = new Error('Route not found')\n        error.status = 404\n        throw error\n      }\n\n      currentContext = { ...context, ...matches.value }\n\n      const result = resolve(currentContext, matches.value.params)\n      if (result !== null && result !== undefined) {\n        return result\n      }\n      return next(resume, parent, result)\n    }\n\n    context.next = next\n\n    try {\n      return next(true, this.root)\n    } catch (error) {\n      if (this.errorHandler) {\n        return this.errorHandler(error, currentContext)\n      }\n      throw error\n    }\n  }\n}\n"],"names":["matchRoute","UniversalRouter","isChildRoute","resolve","pathnameOrContext","context","this","pathname","match","root","baseUrl","substr","length","resolveRoute","matches","nextMatches","currentContext","next","resume","parent","prevResult","value","route","routeToSkip","done","error","Error","status","result","params","errorHandler"],"mappings":";kRAWQA,EAA6BC,EAA7BD,WAAYE,EAAiBD,EAAjBC,oMAGlBC,QAAA,SAAQC,OACAC,mBACDC,KAAKD,QACyB,iBAAtBD,EACP,CAAEG,SAAUH,GACZA,GAEAI,EAAQR,EACZM,KAAKG,KACLH,KAAKI,QACLL,EAAQE,SAASI,OAAOL,KAAKI,QAAQE,QACrC,GACA,MAEIT,EAAUG,KAAKO,aACjBC,EAAU,KACVC,EAAc,KACdC,EAAiBX,WAEZY,EAAKC,EAAQC,EAA8BC,YAA9BD,IAAAA,EAASL,EAAQO,MAAMC,WACrCC,EAA6B,OAAfH,GAAuBN,EAAQO,MAAMC,SACzDR,EAAUC,GAAeP,EAAMS,KAAKM,GACpCR,EAAc,MAETG,IACCJ,EAAQU,OAAStB,EAAaiB,EAAQL,EAAQO,MAAMC,eACtDP,EAAcD,EACP,QAIPA,EAAQU,KAAM,KACVC,EAAQ,IAAIC,MAAM,yBACxBD,EAAME,OAAS,IACTF,EAGRT,mBAAsBX,EAAYS,EAAQO,WAEpCO,EAASzB,EAAQa,EAAgBF,EAAQO,MAAMQ,eACjDD,MAAAA,EACKA,EAEFX,EAAKC,EAAQC,EAAQS,GAG9BvB,EAAQY,KAAOA,aAGNA,GAAK,EAAMX,KAAKG,MACvB,MAAOgB,MACHnB,KAAKwB,oBACAxB,KAAKwB,aAAaL,EAAOT,SAE5BS,OAvDqCxB"}